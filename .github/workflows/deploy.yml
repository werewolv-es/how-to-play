name: Deploy Live

on:
  push:
    branches: [site]

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build and Deploy

    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0

      - name: Setup Node
        uses: actions/setup-node@v1.1.0
        with:
          node-version: lts

      - name: Install Packages
        run: npm ci

      - name: Check for Deployment Target
        id: check_vars
        shell: bash
        run: |
          unset HAS_REGISTRY_DATA
          if [ ! -z $DOCKER_REGISTRY -a ! -z $DOCKER_USERNAME -a ! -z $DOCKER_PASSWORD ]; then HAS_REGISTRY_DATA='true' ; fi
          echo ::set-output name=HAS_REGISTRY_DATA::${HAS_REGISTRY_DATA}

          unset HAS_UPDATE_URL
          if [ ! -z $UPDATE_URL ]; then HAS_UPDATE_URL='true' ; fi
          echo ::set-output name=HAS_UPDATE_URL::${HAS_UPDATE_URL}
        env:
          DOCKER_REGISTRY: "${{ secrets.DOCKER_REGISTRY }}"
          DOCKER_USERNAME: "${{ secrets.DOCKER_USERNAME }}"
          DOCKER_PASSWORD: "${{ secrets.DOCKER_PASSWORD }}"
          UPDATE_URL: "${{ secrets.UPDATE_URL }}"

      - name: Build
        run: npm run build

      - name: Build and Deploy to Docker Registry
        uses: mr-smithers-excellent/docker-build-push@v2
        if: steps.check_vars.outputs.HAS_REGISTRY_DATA
        with:
          image: wwes/h2p
          tag: latest
          registry: ${{ secrets.DOCKER_REGISTRY }}
          dockerfile: .github/workflows/Dockerfile.deploy
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Call update webhook
        if: steps.check_vars.outputs.HAS_UPDATE_URL
        uses: joelwmale/webhook-action@master
        env:
          WEBHOOK_URL: ${{ secrets.UPDATE_URL }}
          data: "{'commit': '${{ github.sha }}'}"
